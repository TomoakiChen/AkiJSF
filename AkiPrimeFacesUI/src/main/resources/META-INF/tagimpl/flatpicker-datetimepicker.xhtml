<?xml version='1.0' encoding='UTF-8' ?> 
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:component xmlns="http://www.w3.org/1999/xhtml"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:p="http://primefaces.org/ui"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:c="http://xmlns.jcp.org/jsp/jstl/core">
    <style>
        body .ui-datepicker .ui-timepicker-div dl dd {
            margin: 0;    
        }
    </style>
    <h:outputScript name="flatpicker-datetimepicker/dayjs/dayjs.min.js"/>    
    
    <h:outputStylesheet name="flatpicker-datetimepicker/flatpicker.min.css"/>
    <h:outputStylesheet name="flatpicker-datetimepicker/themes/airbnb.css"/>    
    <h:outputScript name="flatpicker-datetimepicker/flatpicker.min.js"/>
    
    <h:outputScript name="flatpicker-datetimepicker/plugins/confirmDate.js"/>
    <h:outputStylesheet name="flatpicker-datetimepicker/plugins/confirmDate.css"/>    
    
    <!--    
    https://stackoverflow.com/questions/15002441/primefaces-outputlabel-for-composite-component
    
    
    PF outputLabel 關於 for 的說明:
    Some PrimeFaces input components like spinner, autocomplete does not render just basic inputs so standard outputLabel component cannot apply focus to these, however PrimeFaces outputLabel can.
    
    此篇有說明 component 和 composition 兩種 tag差別:
    https://docs.oracle.com/javaee/6/javaserverfaces/2.0/docs/pdldocs/facelets/ui/tld-summary.html 
    我流理解是: "component 會正式進入 component tree，會被給予獨立 id(如果使用者沒給)
    
    
    此篇有說明 component.id 和 clientId 差別:
    https://docs.oracle.com/javaee/7/api/javax/faces/component/UIComponent.html#getCurrentComponent(javax.faces.context.FacesContext)
    
    -->
    <div style="#{empty blockStyle ? '' : blockStyle}" class="#{empty  blockStyleClass ? '' :  blockStyleClass}">
        <p:inputText id="#{empty id ? component.clientId : id}"
                     value="#{value}" required="#{empty required ? false : required}"  
                     styleClass="#{inputTextStyleClass}">
            <f:convertDateTime type="#{empty dataType ? 'localDateTime' : dataType}"
                               pattern="#{empty dateTimePattern ? 'yyyy-MM-dd HH:mm:ss' : dateTimePattern}"  
                               timeZone="#{empty timeZone ? 'GMT+8' : timeZone}" />
             <f:validateBean disabled="#{empty disableValidate ? false : disableValidate}"/>
             
             <script>
                 $(document).ready(function () {
                     /*
                     https://stackoverflow.com/questions/18988331/how-to-get-id-of-current-component-in-el
                     https://www.baeldung.com/intro-to-jsf-expression-language
                     https://incepttechnologies.blogspot.com/p/jsf-implicit-objects.html
                     https://stackoverflow.com/questions/29035760/what-exactly-is-component-in-el
                     https://docs.oracle.com/javaee/7/api/javax/faces/component/UIComponent.html#getCurrentComponent(javax.faces.context.FacesContext)
                     */
                    /*
                     let wholeId = "#{component.clientId}"; 
                     let id = "theForm:groupMemberListBlock:0:startDateTime_datetimepicker_text";
                     let selector = `[id='${id}']`;
                     */
                     let selector = `[id='#{component.clientId}']`;
                     let fp = flatpickr(selector, {
                         enableTime: #{empty enableTime ? true : enableTime},         
                         dateFormat: '#{empty dateTimePattern ? 'yyyy-MM-dd HH:mm:ss'.replace('d', 'D').replace('y', 'Y') : dateTimePattern.replace('d', 'D').replace('y', 'Y')}', 
                         time_24hr: true,
                         minuteIncrement: 1, //預設是5
//                         defaultDate: '2023-01-01 23:59:59',
                         defaultHour: #{empty hour ? 0 : hour},
                         defaultMinute: #{empty minute ? 0 : minute},
                         plugins: [new confirmDatePlugin({})],                
                         parseDate: (datestr, format) => {                    
                             return dayjs(datestr, format, true);
                         },
                         formatDate: (date, format, locale) => {
                             // locale can also be used
                             return dayjs(date).format(format);
                         },
                         allowInput: #{empty allowInput ? false : allowInput} //https://github.com/flatpickr/flatpickr/issues/355
                     });
                 });
             </script>             
        </p:inputText>
    </div>
</ui:component>
